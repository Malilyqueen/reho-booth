FONCTION recalculateAllAmounts() ‚Äì compl√®te et propre
js
Copier
Modifier
function recalculateAllAmounts() {
  console.log("üîÑ Recalcul en cascade lanc√©");

  let projectTotal = 0;

  // Pour chaque cat√©gorie
  document.querySelectorAll(".expense-category").forEach(categoryEl => {
    let categoryTotal = 0;

    const subcategories = categoryEl.querySelectorAll(".subcategory");
    subcategories.forEach(subEl => {
      let subTotal = 0;

      const lines = subEl.querySelectorAll(".expense-line");
      lines.forEach(lineEl => {
        const amountInput = lineEl.querySelector(".line-amount");
        const amount = parseFloat(amountInput?.value || 0);
        subTotal += amount;
      });

      // Mettre √† jour le montant affich√© dans la sous-cat√©gorie
      const subAmountEl = subEl.querySelector(".subcategory-amount");
      if (subAmountEl) {
        subAmountEl.textContent = formatAmount(subTotal);
      }

      categoryTotal += subTotal;
    });

    // Mettre √† jour le montant affich√© dans la cat√©gorie
    const catAmountEl = categoryEl.querySelector(".category-amount");
    if (catAmountEl) {
      catAmountEl.textContent = formatAmount(categoryTotal);
    }

    projectTotal += categoryTotal;
  });

  // Mettre √† jour le budget total du projet
  const totalBudgetEl = document.getElementById("totalBudget");
  if (totalBudgetEl) {
    totalBudgetEl.textContent = formatAmount(projectTotal);
  }

  console.log(`‚úÖ Recalcul termin√© : total = ${projectTotal}`);
}
üß† Rappels importants :
Cette fonction lit les montants dans les inputs, donc .value, pas .textContent

Elle met √† jour dynamiquement toutes les sommes visibles

Elle fonctionne sans avoir besoin de sauvegarder les donn√©es tout de suite, mais peut √™tre li√©e √† un saveProject() si tu veux

üì¶ √Ä combiner avec :
js
Copier
Modifier
function formatAmount(amount) {
  let currencySymbol = "‚Ç¨"; // Par d√©faut
  if (window.PreferencesManager && typeof PreferencesManager.getCurrentCurrencySymbol === 'function') {
    currencySymbol = PreferencesManager.getCurrentCurrencySymbol();
  }
  return `${currencySymbol} ${amount.toFixed(2).replace('.', ',')}`;
}
Tu peux lui transmettre √ßa directement :
Voici la version compl√®te de recalculateAllAmounts() √† int√©grer dans ton projet.
Elle lit toutes les lignes, met √† jour les sous-totaux et le budget global.
Merci de remplacer ta version actuelle par celle-ci, de l‚Äôappeler √† chaque ajout/modification de montant, et de me pr√©venir d√®s que c‚Äôest branch√©.